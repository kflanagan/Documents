name: Latest blog post workflow
on:
  schedule: # Run workflow automatically
    - cron: '0 * * * *' # Runs every hour, on the hour
  workflow_dispatch: # Run workflow manually (without waiting for the cron to be called), through the GitHub Actions Workflow page directly

jobs:
  update-readme-with-blog:
    name: Update this repo's README with latest blog posts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull in dev.to posts
        uses: gautamkrishnar/blog-post-workflow@v1
        with:
          feed_list: "https://github.com/kflanagan/Documents"
Replace the above URL list with your own RSS feed URLs. See popular-sources for a list of common RSS feed urls.
Commit and wait for it to run automatically, or you can also trigger it manually to see the result instantly. To trigger the workflow manually, please follow the steps in the video.
Options
This workflow has additional options that you can use to customize it for your use case. The following are the list of options available:

Option	Default Value	Description	Required
feed_list	""	Comma-separated list of RSS feed urls, eg: https://example1.com,https://example2.com	Yes
max_post_count	5	Maximum number of posts you want to show on your readme, all feeds combined	No
readme_path	./README.md	Comma separated paths of the readme files you want to update	No
gh_token	your GitHub token with repo scope	Use this to configure the token of the user that commits the workflow result to GitHub	No
comment_tag_name	BLOG-POST-LIST	Allows you to override the default comment tag name (<!-- BLOG-POST-LIST:START --><!-- BLOG-POST-LIST:END -->), if you want to show multiple instances of the action on the same repo, see advanced usage for more info	No
disable_sort	false	Disables the sorting of the list based on publish date	No
feed_names	""	Comma-separated list of RSS feed names, this is intended to be used with template option. eg: Blog,Dev.to	No
template	default	Allows you to change the structure of the posts list by using different variables. By default this workflow uses markdown list format to render the posts, you can override this behavior using this option. Eg: [$title]($url)  will give you a space-separated list of posts.

Supported variables
$title: Title of the post
$url: URL of the post
$description: Description of the post
$newline: Inserts a newline
$date: Inserts the post date based on the date_format specified
$randomEmoji: Allow you to use random emojis in the post, pass emojis as the parameter to chose one of it randomly in each post item. Eg: $randomEmoji(ðŸ’¯,ðŸ”¥,ðŸ’«,ðŸš€,ðŸŒ®). See the issue comment for more details
$emojiKey: You can use this argument to show emojis on each of your post item sequentially in the order you specify. Example: $emojiKey(ðŸ’¯,ðŸ”¥,ðŸ’«). See the issue comment for more details
$counter: You can use this argument to show a serial number on each of your post items.
$feedName: You can use this argument to show a string that represents your website name, use feed_names argument to specify it for each feed item. Eg: feed_list: "https://dev.to/feed/gautamkrishnar,https://www.gautamkrishnar.com/feed/", feed_names: "Dev.to,Personal Website"
$categories: You can use this to show a comma separated list of post categories if available. See this issue for more details
No
categories_template	default	By default $categories variable in the template is a comma separated string of categories. This option will allow you override it and customize the category item according to your use case. Following are the variables available:
$category: Represents individual category item
eg: <code>$category</code>  will show category list as category1 category2 category3 etc	No
date_format	UTC:ddd mmm dd yyyy h:MM TT	Allows you to change the format of the date or time displayed when using the $date in the template option. This uses NPM dateformat library, please read the library documentation for the supported formats	No
user_agent	rss-parser	Allows you to customize the user agent used by the RSS feed crawler	No
accept_header	application/rss+xml	Allows you to customize the accept header of the http requests	No
tag_post_pre_newline	true if you are not using template option	Allows you to insert a newline before the closing tag and after the opening tag when using the template option if needed, for better formatting	No
filter_comments	medium,stackoverflow/Comment by $author/,stackexchange/Comment by $author/	Comma separated list of platforms you want to enable the comment filter.

Available filters
medium: Allows you to filter out the Medium comments. Known issue: #37
stackoverflow/Comment by $author/: Allows you to filter out the StackOverflow comments. Argument to this filter is optional, it defaults to 'Comment by $author'. If you use any language other than English on StackOverflow, you can use this argument to customize it. See #16 for more info.
stackexchange/Comment by $author/: Allows you to filter out the StackExchange comments. Argument to this filter follows the same format as stackoverflow filter's argument.
No
custom_tags	""	Allows you to use the custom tags from your feed items in your template. Format: variableName/tagName/,variableName/tagName/. Please see the issue comment for more details	No
title_max_length	""	Allows you to trim the title in the posts list, excess text will be appended with an ellipsis ...	No
description_max_length	""	Allows you to trim the description in the posts list, excess text will be appended with an ellipsis ...	No
item_exec	""	Allows you to execute custom JavaScript code on each post item fetched from the xml to do advanced text manipulation. Please see the issue comment as an example	No
commit_message	Updated with the latest blog posts	Allows you to customize the commit message	No
committer_username	blog-post-bot	Allows you to customize the committer username	No
committer_email	blog-post-bot@example.com	Allows you to customize the committer email	No
output_only	false	Sets the generated array as results output variable so that it can be consumed in other actions and parsed via utilities like jq. This will also prevent committing to readme. See #51 for more details about the output format and how to use it. This will also generate a JSON file named /tmp/blog_post_workflow_output.json that you can use to consume the generated data and avoid issues like #110.	No
enable_keepalive	true	Workflow will automatically do a dummy commit to keep the repository active if there is no commit activity for the last 50 days. GitHub will stop running all cron based triggers if the repository is not active for more than 60 days. This flag allows you to disable this feature. See #53 for more details.	No
retry_count	0	Maximum number of times to retry the fetch operation if it fails, See #66 for more details.	No
retry_wait_time	1	Time to wait before each retry operation in seconds.	No
disable_html_encoding	false	Disables html encoding of the feed contents.	No
disable_item_validation	false	Disables the validation checks for Title, publish date and URL.	No
filter_dates	""	Allows you to filter post items based on date range.

Supported Values
daysAgo/N/: Use this value to display only the posts from the last N days. eg: daysAgo/10/ will show only posts from last 10 days.
currentMonth: Use this value to display the post that are published on current month.
currentYear: Use this value to display the post that are published on current year.
Make sure that you set the max_post_count to a higher value to get rid of max post count filtering, before using the above options.	No
rand_seed	"username/repository"	Provide your own seeding string for the randomness. More info: #152	No
remove_duplicates	false	Allows you to remove duplicate blog posts from multiple sources, if are cross posting. This filters contents based on blog post's title.	No
Advanced usage examples
Click to expand:

StackOverflow example
Blog post table
Youtube videos table
Popular Sources
Some popular blogging platforms and their RSS feed URLs (Click to expand)
Examples
My own GitHub profile readme - YML File
FAQs and Common issues
Error Code 128
Demo video
Please see the video by @codeSTACKr.

Contributing
Please see CONTRIBUTING.md for getting started with the contribution.

Make sure that you follow CODE_OF_CONDUCT.md while contributing and engaging in the discussions.

When contributing, please first discuss the change you wish to make via an issue on this repository before making the actual change.

ToDo
 Add more sources
 Fix bugs if any
Bugs
If you are experiencing any bugs, donâ€™t forget to open a new issue.

Thanks to
All the 6.1K+sparkles users of this workflow
Everyone for making this project the top 20 most installed / starred action in the GitHub Marketplace
All the contributors
@codeSTACKr for this amazing video
CodeCov for this blog: Discovering the Most Popular and Most Used GitHub Actions
the byte podcast
JetBrains for sponsoring the Open Source License to my favourite IDE WebStorm:
jetbrains
Thanks @github, for GitHub India Open Source Grants and for sponsoring me
Liked it?
Hope you liked this project, don't forget to give it a star star.

chart
